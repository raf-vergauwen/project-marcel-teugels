// -----------------------------------------------------------------------------
// +  _functions.scss: This partial file contains all Scss 'functions'.
// -----------------------------------------------------------------------------

// * Return color with different opacity value

@function alpha($color, $opacity) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});

  @return hsla($color-h, $color-s, $color-l, $opacity);
}

// * Return color with different lightness value

@function lightness($color, $lightnessMultiplier) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});

  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));
}

// * Modify color HSLA values

@function adjustHSLA(
  $color,
  $hueMultiplier: 1,
  $saturationMultiplier: 1,
  $lightnessMultiplier: 1,
  $opacity: 1
) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});

  @return hsla(
    calc(#{$color-h} * #{$hueMultiplier}),
    calc(#{$color-s} * #{$saturationMultiplier}),
    calc(#{$color-l} * #{$lightnessMultiplier}),
    $opacity
  );
}

// *  Replace substring with another string

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}
