/* -------------------------------------------------------------------------- *\
// *  <<--------------------<< MAIN HEADER >>-------------------->>
\* -------------------------------------------------------------------------- */

// -  <---------------| Main-Header |--------------->
@mixin main-header {
  .sh-l-header {
    position: fixed;
    z-index: 99;
    filter: drop-shadow(
      0 $small-dimension--s $small-dimension--s
        $bg-color--transparant-black---level-3
    );
    transform: translate3d(0, 0, 0);
    transition: $transition--transform;

    &--hidden {
      transform: translate3d(0, -100%, 0);
    }

    &__main-container {
      // ...
    }

    &__nav-container {
      // ...
    }

    &__menu-btn-container {
      // ...
    }
  }

  .sh-c-header-nav {
    @include flex-container(nowrap, column);

    padding: 0;

    @include breakpoint(m) {
      @include flex-container(nowrap, row);

      overflow: hidden;
      border-radius: $small-dimension--l;
    }

    &__list {
      @include breakpoint(m) {
        @include flex-container(nowrap, row, space-between);
      }

      > li:first-child > a {
        background-color: var(--color-text);
        border-radius: $small-dimension--l;
      }
    }
    &__item {
      @include breakpoint(xxs) {
        &:first-child {
          padding-top: 0;
        }

        &:last-child {
          padding-bottom: 0;
        }
      }

      @include breakpoint(m) {
        display: inline-flex;
        width: auto;
        padding: 0;
      }
    }

    &__link {
      @include color-link(background, 'tertiary--lighter');

      padding: $buffer--xs $buffer--s;

      @include breakpoint(l) {
        padding-right: $buffer--m;
        padding-left: $buffer--m;
      }

      @include breakpoint(xl) {
        padding-right: $buffer--l;
        padding-left: $buffer--l;
      }
    }

    &__link--active {
      @include color-link(primary, 'text--darkest', btn);
    }

    &__link-icon {
      // ...
    }
  }

  .hamburger {
    @include box-dimensions(
      $width: $font-size--text-bigger * $line-height--text-bigger + $buffer--s,
      $height: $font-size--text-bigger * $line-height--text-bigger + $buffer--s
    );
    @include flex-container($direction: column, $justify: space-between);

    background: var(--color-tertiary);

    &__item {
      $hamburger-item: $buffer--m - $buffer--xxs;
      @include box-dimensions($height: $buffer--xxs);

      background: var(--color-primary);
      transition: transform 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95),
        opacity 300ms linear;

      &--first {
        .hamburger--is-open & {
          transform: translate(0, $hamburger-item) rotate(45deg);
        }
      }

      &--middle {
        .hamburger--is-open & {
          opacity: 0;
        }
      }

      &--last {
        .hamburger--is-open & {
          transform: translate(0, -$hamburger-item) rotate(-45deg);
        }
      }
    }
  }
}
