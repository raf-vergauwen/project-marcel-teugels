/* -------------------------------------------------------------------------- *\
// *  <<--------------------<< MAIN HEADER >>-------------------->>
\* -------------------------------------------------------------------------- */

// -  <---------------| Main-Header |--------------->
@mixin main-header {
  .c-header {
    padding: 0;
    background-color: transparent;

    &__container {
      @include box-dimensions(
        s,
        $max-width: $max-width--root,
        $margin: $center-me
      );

      @include block-container;

      position: fixed;
      z-index: 1;
      padding: $buffer--s $buffer--m;
      transform: translate3d(0, 0, 0);
      transition: $transition--default;

      @include breakpoint(m) {
        padding: $buffer--s $buffer--m;
      }

      @include breakpoint(l) {
        padding: $buffer--s $buffer--l;
      }
    }

    &__container--hidden {
      transform: translate3d(0, -100%, 0);
    }
  }

  .c-header-nav {
    @include flex-container(nowrap, column);

    background-color: var(--color-primary);
    filter: drop-shadow(
      0 $small-dimension--s $small-dimension--s var(--color-text)
    );

    @include breakpoint(m) {
      @include flex-container(nowrap, row, space-evenly, stretch);

      overflow: hidden;
      border-radius: $small-dimension--l;
    }

    &__list {
      @include breakpoint(m) {
        @include flex-container(nowrap, row, space-evenly, stretch);
      }

      > li:first-child > a {
        // margin: 0;
        background-color: var(--color-text);
        border-radius: $small-dimension--l;
      }
    }
    &__item {
      @include breakpoint(xxs) {
        &:first-child {
          padding-top: 0;
        }

        &:last-child {
          padding-bottom: 0;
        }
      }

      @include breakpoint(m) {
        display: inline-flex;
        width: auto;

        &:first-child {
          padding-top: $buffer--xs;
        }

        &:last-child {
          padding-bottom: $buffer--xs;
        }
      }
    }

    &__link {
      padding: $buffer--xs $buffer--s;
      color: var(--color-background);

      @include breakpoint(m) {
        width: auto;
      }

      &:hover {
        color: var(--color-tertiary--lightest);
      }
    }

    &__link-icon {
      color: var(--color-background);
    }

    &__link--active {
      overflow: hidden;
      background-color: var(--color-tertiary);
      border-radius: $small-dimension--m;
      color: var(--color-primary);

      path {
        color: var(--color-primary);
      }

      &:hover path {
        color: var(--color-text--darkest);
      }

      &::after {
        background: var(--color-text--darkest);
      }

      &:hover {
        color: var(--color-text--darkest);
      }

      &:hover::before {
        background: var(--color-text--darkest);
      }

      &:hover::after {
        background: transparent;
      }
    }
  }
}
