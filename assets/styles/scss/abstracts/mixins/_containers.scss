// -----------------------------------------------------------------------------
// +  Containers
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// *  Universal Containers
// -----------------------------------------------------------------------------

@mixin container(
  $container-type: inner-block,
  $wrap-type: nowrap,
  $direction: column,
  $justify: center,
  $align: center
) {
  width: 100%;
  height: 100%;
  margin: 0 auto;

  // #  Inner-Block Container
  @if $container-type == inner-block {
    display: block;
    padding: 0;
  }

  // #  Inner-Flex Container
  @if $container-type == inner-flex {
    display: flex;
    padding: 0;
  }

  // #  Inner-Grid Container
  @if $container-type == inner-grid {
    display: grid;
    padding: 0;
  }

  // #  Outer-Block Container
  @if $container-type == outer-block {
    display: block;
    padding: $whitespace--xs;
  }

  // #  Outer-Flex Container
  @if $container-type == outer-flex {
    display: flex;
    padding: $whitespace--xs;
  }

  // #  Outer-Grid Container
  @if $container-type == outer-grid {
    display: grid;
    padding: $whitespace--xs;
  }

  // -  <---------------------------------------------------------------------->

  // #  Inner-Flex Container
  @if $container-type == inner-flex {
    justify-content: $justify;

    // #  Inner-Flex Container Nowrap
    @if $wrap-type == nowrap {
      flex-direction: $direction;
      flex-direction: column;
      align-items: $align;
    }
    // #  Inner-Flex Container Wrap
    @else if $wrap-type == wrap {
      flex-direction: $direction;
      align-content: $align;
    }
    // #  Invalid arguments!
    @else {
      @error 'Invalid SCSS argument detected!';
    }
    //...
  }

  // #  Outer-Flex Container
  @if $container-type == outer-flex {
    justify-content: $justify;

    // #  Outer-Flex Container Nowrap
    @if $wrap-type == nowrap {
      flex-direction: $direction;
      align-items: $align;
    }
    // #  Outer-Flex Container Wrap
    @else if $wrap-type == wrap {
      flex-direction: $direction;
      align-content: $align;
    }
    // #  Invalid arguments!
    @else {
      @error 'Invalid SCSS argument detected!';
    }
    //...
  }
}

// -----------------------------------------------------------------------------
// *  Specific Containers
// -----------------------------------------------------------------------------

// -  <<----------<< Block-Box>>---------->>

@mixin dimensions($type: none, $width: 100%, $height: auto) {
  width: $width;
  height: $height;

  // #  Regular Fontawesome Icons
  @if $type == fas {
    margin: 0 ($width / 2) 0 0;
    font-size: $width;
  }
  // #  Brand Fontawesome Icons
  @else if $type == fab {
    margin: 0 ($width / 2) 0 0;
    font-size: $width;
  }
}

// -  <<----------<< Flex-Box >>---------->>

// #  Flex-Items ---> Children
@mixin flex-items($basis: $dimension--xxs, $grow: 1, $shrink: 1) {
  flex-basis: $basis;
  flex-grow: $grow;
  flex-shrink: $shrink;
}

// #  Inline-Flex-Container ---> buttons, navigation, vertical lists
@mixin inline-flex-container($direction, $justify, $align) {
  display: inline-flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

// -  <<----------<< Grid-Box >>---------->>

// #  Grid-Container
@mixin grid-container() {
  display: grid;
  // ...
}
