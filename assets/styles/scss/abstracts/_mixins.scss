// -----------------------------------------------------------------------------
// +  _mixins.scss: This partial file contains all Scss 'mixins'.
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// * Layout
// -----------------------------------------------------------------------------

// -  <<----------<< HTML Tags >>---------->>

// #  <article>
@mixin article {
  // ...
}

// #  <aside>
@mixin aside {
  //...
}

// #  <footer>
@mixin footer {
  //...
}

// #  <form>
@mixin form {
  //...
}

// #  <header>
@mixin header {
  //...
}

// #  <nav>
@mixin nav {
  //...
}

// #  <section>
@mixin section {
  min-width: $dimension-xxs;
  padding: $size-xxl;
  // ...

  &__container {
    @include container;
    // ...
  }

  &__title {
    @include title;
    // ...
  }
}

// #  <table>
@mixin table {
  //...
}

// -  <<----------<< Containers >>---------->>

// #  Block-Container
@mixin block-container($max-width, $max-height) {
  display: block;
  width: 100%;
  max-width: $max-width;
  height: 100%;
  max-height: $max-height;
  margin: 0 auto;
}

// #  Flex-Container ---> Parent
@mixin flex-container($direction, $justify, $align, $type: nowrap) {
  // #  Flex-Container--Nowrap
  @if $type == nowrap {
    display: flex;
    flex-direction: $direction;
    align-items: $align;
    justify-content: $justify;
  }
  // #  Flex-Container--Wrap
  @else if $type == wrap {
    display: flex;
    flex-direction: $direction;
    align-content: $align;
    justify-content: $justify;
  }
}

// #  Flex-Items ---> Children
@mixin flex-items($basis: $dimension--xxs, $grow: 1, $shrink: 1) {
  flex-basis: $basis;
  flex-grow: $grow;
  flex-shrink: $shrink;
}

// #  Inline-Flex-Container ---> buttons, navigation, vertical lists
@mixin inline-flex-container($direction, $justify, $align) {
  display: inline-flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

// #  Grid-Container
@mixin grid-container() {
  display: grid;
  // ...
}

// --------------------------------------------------------------------------

// #  Container
@mixin container($type) {
  // #  Block-Container
  @if $type == block {
    display: block;
    width: 100%;
    max-width: $max-width;
    margin: 0 auto;
  }
  // #  Flex-Container
  @else if $type == flex {
    display: flex;
  }
  // #  Inline-Flex-Container
  @else if $type == inline-flex {
    display: inline-flex;
  }
  // #  Grid-Container
  @else if $type == grid {
    display: grid;
  }
  // #  Invalid arguments!
  @else {
    @error '#{$type} is an unknown container type.';
  }
}

// -----------------------------------------------------------------------------
// *  Components
// -----------------------------------------------------------------------------

// ...

// -----------------------------------------------------------------------------
// *  Typography
// -----------------------------------------------------------------------------

// #  Subject
@mixin subject {
  color: $color--subject;
  font-family: $font-family--subject;
  font-size: $font-size--subject;
  font-variant: $font-variant--subject;
  font-weight: $font-weight--subject;
  letter-spacing: $letter-spacing--subject;
  line-height: $line-height--subject;
  text-align: $text-align--subject;
  text-transform: $text-transform--subject;
}

// #  Title
@mixin title {
  color: $color--title;
  font-family: $font-family--title;
  font-size: $font-size--title;
  font-variant: $font-variant--title;
  font-weight: $font-weight--title;
  letter-spacing: $letter-spacing--title;
  line-height: $line-height--title;
  text-align: $text-align--title;
  text-transform: $text-transform--title;
}

// #  Subtitle
@mixin subtitle {
  color: $color--subtitle;
  font-family: $font-family--subtitle;
  font-size: $font-size--subtitle;
  font-variant: $font-variant--subtitle;
  font-weight: $font-weight--subtitle;
  letter-spacing: $letter-spacing--subtitle;
  line-height: $line-height--subtitle;
  text-align: $text-align--subtitle;
  text-transform: $text-transform--subtitle;
}

// #  Text
@mixin text {
  color: $color--text;
  font-family: $font-family--text;
  font-size: $font-size--text;
  font-variant: $font-variant--text;
  font-weight: $font-weight--text;
  letter-spacing: $letter-spacing--text;
  line-height: $line-height--text;
  text-align: $text-align--text;
  text-transform: $text-transform--text;
}

// -----------------------------------------------------------------------------
// *  Breakpoints
// -----------------------------------------------------------------------------

@mixin breakpoint($breakpoint) {
  // #  Breakpoint 1 - Extra Extra Small - 20rem / 320px
  @if $breakpoint == xxs {
    @media (min-width: $dimension-xxs) {
      @content;
    }
  }
  // #  Breakpoint 2 - Extra Small - 40rem / 640px
  @if $breakpoint == xs {
    @media (min-width: $dimension-xs) {
      @content;
    }
  }
  // #  Breakpoint 3 - Small - 60rem / 960px
  @else if $breakpoint == s {
    @media (min-width: $dimension-s) {
      @content;
    }
  }
  // #  Breakpoint 4 - Medium - 80rem / 1280px
  @else if $breakpoint == m {
    @media (min-width: $dimension-m) {
      @content;
    }
  }
  // #  Breakpoint 5 - Large - 100rem / 1600px
  @else if $breakpoint == l {
    @media (min-width: $dimension-l) {
      @content;
    }
  }
  // #  Breakpoint 6 - Extra Large - 120rem / 1920px
  @else if $breakpoint == xl {
    @media (min-width: $dimension-xl) {
      @content;
    }
  }
  // #  Breakpoint 7 - Extra Extra Large - 140rem / 2240px
  @else if $breakpoint == xxl {
    @media (min-width: $dimension-xxl) {
      @content;
    }
  }
  // #  Invalid arguments!
  @else {
    @warn 'Breakpoint mixin supports: xxs, xs, s, m, l, xl, xxl';
  }
}
